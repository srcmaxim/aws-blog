#
# Use Bash/PowerShell to debug buildspec commands. Substitute ${PWD} with $(pwd) if you're using Bash:
# docker run --tty -it -v ${PWD}:/project quay.io/quarkus/centos-quarkus-maven:20.2.0-java11 /bin/bash
#
version: 0.2
phases:
  pre_build:
    commands:
      - echo Logging in to DockerHub...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo Setup Env...
      - export REPO=$(pwd)/src/blog-lambda
      - export IMAGE_REPO_NAME=blog-lambda
      - export IMAGE_TAG=$CODEBUILD_BUILD_NUMBER
      - echo Setup Meta...
      - cd $REPO
      - echo meta.build-number=$CODEBUILD_BUILD_NUMBER >> src/main/resources/application.properties
      - echo meta.source-version=$CODEBUILD_SOURCE_VERSION >> src/main/resources/application.properties
  build:
    commands:
      - echo Build started on `date`
      - echo Starting local resources...
      - docker run --publish 8000:8000 amazon/dynamodb-local:1.11.477 -jar DynamoDBLocal.jar -inMemory -sharedDb
      - export DYNAMODB=http://$(hostname -I | cut -d' ' -f1):8000
      - echo DYNAMODB=$DYNAMODB
      - cd $REPO
      - echo Building the App...
      - mvn clean install -Pnative -Dquarkus.native.container-build=true -Dquarkus.dynamodb.endpoint-override=$DYNAMODB
      - echo Building the Docker image for Lambda...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Setting ECR image version...
      - aws ssm put-parameter --name /dev/blog-lambda/ecr-image/version --value $IMAGE_TAG --overwrite
